version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15
    container_name: securechain_postgres
    environment:
      POSTGRES_DB: securechain
      POSTGRES_USER: securechain
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-scripts:/docker-entrypoint-initdb.d
    networks:
      - securechain_network

  # Neo4j Database
  neo4j:
    image: neo4j:5.15
    container_name: securechain_neo4j
    environment:
      NEO4J_AUTH: neo4j/neo4j_password
      NEO4J_PLUGINS: '["apoc"]'
      NEO4J_dbms_security_procedures_unrestricted: apoc.*
    ports:
      - "7474:7474"  # HTTP
      - "7687:7687"  # Bolt
    volumes:
      - neo4j_data:/data
      - neo4j_logs:/logs
    networks:
      - securechain_network

  # Redis for background tasks
  redis:
    image: redis:7-alpine
    container_name: securechain_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - securechain_network

  # OpenCTI Platform (optional)
  opencti:
    image: opencti/platform:5.12.17
    container_name: securechain_opencti
    environment:
      - NODE_OPTIONS=--max-old-space-size=8096
      - APP__PORT=8080
      - APP__BASE_URL=http://localhost:8080
      - APP__ADMIN__EMAIL=admin@opencti.io
      - APP__ADMIN__PASSWORD=ChangeMe
      - APP__ADMIN__TOKEN=ChangeMe
      - APP__APP_LOGS__LOGS_LEVEL=info
      - REDIS__HOSTNAME=redis
      - REDIS__PORT=6379
      - ELASTICSEARCH__URL=http://elasticsearch:9200
      - MINIO__ENDPOINT=minio
      - MINIO__PORT=9000
      - MINIO__USE_SSL=false
      - MINIO__ACCESS_KEY=ChangeMeAccessKey
      - MINIO__SECRET_KEY=ChangeMeSecretKey
      - RABBITMQ__HOSTNAME=rabbitmq
      - RABBITMQ__PORT=5672
      - RABBITMQ__PORT_MANAGEMENT=15672
      - RABBITMQ__MANAGEMENT_SSL=false
      - RABBITMQ__USERNAME=guest
      - RABBITMQ__PASSWORD=guest
      - SMTP__HOSTNAME=localhost
      - SMTP__PORT=25
      - PROVIDERS__LOCAL__STRATEGY=LocalStrategy
    ports:
      - "8080:8080"
    depends_on:
      - redis
      - elasticsearch
      - minio
      - rabbitmq
    networks:
      - securechain_network

  # Elasticsearch for OpenCTI
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.11.0
    container_name: securechain_elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.ml.enabled=false
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms512M -Xmx512M"
    ports:
      - "9200:9200"
    volumes:
      - esdata:/usr/share/elasticsearch/data
    networks:
      - securechain_network

  # MinIO for OpenCTI file storage
  minio:
    image: minio/minio:RELEASE.2023-11-20T22-40-07Z
    container_name: securechain_minio
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: ChangeMeAccessKey
      MINIO_ROOT_PASSWORD: ChangeMeSecretKey
    command: server /data --console-address ":9001"
    volumes:
      - s3data:/data
    networks:
      - securechain_network

  # RabbitMQ for OpenCTI
  rabbitmq:
    image: rabbitmq:3.12-management
    container_name: securechain_rabbitmq
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - amqpdata:/var/lib/rabbitmq
    networks:
      - securechain_network

  # SecureChain Backend API
  backend:
    build: .
    container_name: securechain_backend
    environment:
      - POSTGRES_URL=postgresql://securechain:password@postgres:5432/securechain
      - NEO4J_URI=bolt://neo4j:7687
      - NEO4J_USER=neo4j
      - NEO4J_PASSWORD=neo4j_password
      - OPENCTI_URL=http://opencti:8080
      - OPENCTI_TOKEN=ChangeMe
      - REDIS_URL=redis://redis:6379/0
    ports:
      - "8001:8000"
    depends_on:
      - postgres
      - neo4j
      - redis
    volumes:
      - .:/app
    networks:
      - securechain_network

volumes:
  postgres_data:
  neo4j_data:
  neo4j_logs:
  redis_data:
  esdata:
  s3data:
  amqpdata:

networks:
  securechain_network:
    driver: bridge